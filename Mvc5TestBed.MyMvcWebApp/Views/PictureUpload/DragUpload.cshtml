@model Mvc5TestBed.MyMvcWebApp.Models.UploadThingy
@{
    ViewBag.Title = "Example of Uploading Files";
}

<style>
    .dropzone {
        float: left;
        width: 300px;
        height: 300px;
        border: 1px solid #cccccc;
        border-radius: 7px;
        padding: 10px;
    }
</style>

@Scripts.Render("~/Scripts/jquery-1.10.2.js")

<div class="container">

    @using (Html.BeginForm("Upload", "PictureUpload", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="row">
            <div id="initialInfo" class="infoBox">
                <h3>Choose Image to Upload</h3>

                <input id="imageFileInput" name="pictureFiles" type="file" accept="image/*" multiple="multiple">
                <div id="dropzone" class="dropzone">
                    Or drag/drop image file(s) here
                </div>
            </div>
        </div>
        <div class="row">
            <input type="submit" value="Send to Server">
        </div>
        <div class="row">
            <div id="initialInfo" class="infoBox">
                <label id="dragInfo"></label>
                <ul id="draggedFiles"></ul>
            </div>
        </div>
    }

    <div>
        <img id="draggable1" src="~/images/blueSquare.png" draggable="true">
    </div>
    @*@if (!string.IsNullOrWhiteSpace(Model.ImgUrl))*@
    <img id="cropTarget" src="@(Model.ImgUrl)" />
</div>

<style>
    #filedrag
{
	display: none;
	font-weight: bold;
	text-align: center;
	padding: 1em 0;
	margin: 1em 0;
	color: #555;
	border: 2px dashed #555;
	border-radius: 7px;
	cursor: default;
}

#filedrag.hover
{
	color: #f00;
	border-color: #f00;
	border-style: solid;
	box-shadow: inset 0 3px 4px #888;
}
</style>
<form id="upload" action="upload.php" method="POST" enctype="multipart/form-data">

    <fieldset>
        <legend>HTML File Upload</legend>

        <input type="hidden" id="MAX_FILE_SIZE" name="MAX_FILE_SIZE" value="300000" />

        <div>
            <label for="fileselect">Files to upload:</label>
            <input type="file" id="fileselect" name="fileselect[]" multiple="multiple" />
            <div id="filedrag">or drop files here</div>
        </div>

        <div id="submitbutton">
            <button type="submit">Upload Files</button>
        </div>

    </fieldset>

</form>

<div id="messages">
    <p>Status Messages</p>
</div>

<script type="text/javascript">
    // getElementById
    function $id(id) {
        return document.getElementById(id);
    }

    //
    // output information
    function Output(msg) {
        var m = $id("messages");
        m.innerHTML = msg + m.innerHTML;
    }
    // call initialization file
    if (window.File && window.FileList && window.FileReader) {
        Init();
    }

    //
    // initialize
    function Init() {

        var fileselect = $id("fileselect"),
            filedrag = $id("filedrag"),
            submitbutton = $id("submitbutton");

        // file select
        fileselect.addEventListener("change", FileSelectHandler, false);

        // is XHR2 available?
        var xhr = new XMLHttpRequest();
        if (xhr.upload) {

            // file drop
            filedrag.addEventListener("dragover", FileDragHover, false);
            filedrag.addEventListener("dragleave", FileDragHover, false);
            filedrag.addEventListener("drop", FileSelectHandler, false);
            filedrag.style.display = "block";

            // remove submit button
            submitbutton.style.display = "none";
        }

    }
    // file drag hover
    function FileDragHover(e) {
        e.stopPropagation();
        e.preventDefault();
        e.target.className = (e.type == "dragover" ? "hover" : "");
    }// file selection
    function FileSelectHandler(e) {

        // cancel event and hover styling
        FileDragHover(e);

        // fetch FileList object
        var files = e.target.files || e.dataTransfer.files;

        // process all File objects
        for (var i = 0, f; f = files[i]; i++) {
            ParseFile(f);
        }

    }
    function ParseFile(file) {

        Output(
            "<p>File information: <strong>" + file.name +
            "</strong> type: <strong>" + file.type +
            "</strong> size: <strong>" + file.size +
            "</strong> bytes</p>"
        );

    }
 </script>

    <script type="text/javascript">

        function reportUploadInfo(fileList) {

            var label = $("#dragInfo");
            if (fileList.length > 0) {
                label.html("You've just chosen " + fileList.length + " file(s)");
            } else {
                label.html("File not chosen");
            }
            var ul = $("#draggedFiles");
            ul.empty();

            //list files
            for (var i = 0; i < fileList.length; i++) {
                var li = document.createElement("li");
                $(li).html(fileList[i].name);
                ul.append(li);
            }
        }

    function previewImage(imageFile) {
        var reader = new FileReader();
        reader.onload = function (e) {
            $("#cropTarget").attr("src", e.target.result);
        }
        reader.readAsDataURL(imageFile);
    }

    $(document).ready(function () {
        function dragStart(event) {
            console.log("dragStart");
            event.dataTransfer.setData('text/html', "You dragged the image!");
        }

        function dragEnd(event) {
            console.log("dragEnd");
        }

        function dragOverEvent(event) {
            console.log("dragover");
            event.preventDefault();

            //event.target.style.border = "2px solid #9ecaed";
            $(event.target).css("outline", "none");
            $(event.target).css("border-color", "#9ecaed");
            $(event.target).css("box-shadow", "1px 1px 10px #9ecaed");
        }

        function dragLeaveEvent(event) {
            console.log("dragleave");
            event.preventDefault();
            $(event.target).css("border-color", "");
            $(event.target).css("box-shadow", "");
            event.target.style.border = "1px solid #cccccc";
        }

        function dragDropEvent(event) {
            console.log("drop");
            event.preventDefault();
            // Ready to do something with the dropped object
            event.target.style.border = "1px solid #cccccc";
            reportUploadInfo(event.dataTransfer.files);
        }

        //function cancel(e) {
        //    if (e.preventDefault) e.preventDefault();
        //    return false;
        //}

        var draggable = document.getElementById("draggable1");
        draggable.addEventListener('dragstart', dragStart, false);
        draggable.addEventListener('dragend', dragEnd, false);

        //var dropzone = document.getElementById("dropzone");
        dropzone.addEventListener("dragover", dragOverEvent, true);
        dropzone.addEventListener("dragleave", dragLeaveEvent, true);
        dropzone.addEventListener("drop", dragDropEvent, true);

        $("#imageFileInput").change(function () {
            reportUploadInfo(this.files);
            if (this.files && this.files.length > 0) {
                previewImage(this.files[0]);
            }
        });
    });

</script>
